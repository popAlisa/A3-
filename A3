from microbit import *
import music
import neopixel
np = neopixel.NeoPixel(pin0, 30)
def range_map(value, in_min, in_max, out_min, out_max):
    return (value - in_min) * (out_max - out_min) / (in_max - in_min) + out_min
last_change = 0
wait_time = 500
count_height = 0
count_width = 0
count_up = 0
g_played = False
d_played = False
initial = 500

while True:
    x = accelerometer.get_x()
    y = accelerometer.get_y()
    z = accelerometer.get_z()

    if x < 250 and g_played is False:
        music.play('C3')
        g_played = True
        d_played = False
    elif x > 250 and x < 500 and g_played is False:
        music.play('D')
        d_played = True
        g_played = False
    elif x > 500 and x < 750 and g_played is False:
        music.play('E')
        d_played = True
        g_played = False
    elif x > 750 and x < 1000 and g_played is False:
        music.play('F')
        d_played = True
        g_played = False
    elif x > 1000 and x < 1250 and g_played is False:
        music.play('G')
        d_played = True
        g_played = False
    elif x > 1250 and x < 1500 and g_played is False:
        music.play('A')
        d_played = True
        g_played = False
    elif x > 1500 and x < 1750 and g_played is False:
        music.play('B')
        d_played = True
        g_played = False
    elif x > 1750 and x < 2000 and g_played is False:
        music.play('C')
        d_played = True
        g_played = False
    elif y > 10 and g_played is False:
        initial += 100
        music.pitch(initial , 100)
    elif y < 10 and g_played is False:
        initial -= 100
        music.pitch(initial , 100)
    elif y < -300 and g_played is False:
        music.play('F')
        d_played = True
        g_played = False
    elif y > -301 and y < 700 and g_played is False:
        music.play('G')
        d_played = True
        g_played = False
    elif y > 700:
        music.play('A')
        d_played = True
        g_played = False
    count_height -= 20*y
    count_width -= 20*x

    if count_height < 0 or count_width < 0 :
        count_height = 0
        count_up = 0
        count_width = 0
    elif count_height > 10000 or count_width > 10000 :
        count_height = 10000
    print((count_height,))
    print((count_width,))
    if running_time() > last_change + wait_time:
        wait_time = range_map(count_height, 0, 10000, 5000, 500)
        wait_time = range_map(count_up, 0, 10000, 5000, 500)
        wait_time = range_map(count_width, 0, 10000, 5000, 500)
        for x in range(30):
            np[x] = (255, 255, 255)
    np.show()
    sleep(0.5*wait_time)
    np.clear()

